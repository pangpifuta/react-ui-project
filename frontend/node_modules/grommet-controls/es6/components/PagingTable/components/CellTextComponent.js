function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

import React from 'react';
import { Text } from 'grommet';

var extractTextProps = function extractTextProps(_ref) {
  var value = _ref.value,
      color = _ref.color,
      size = _ref.size,
      truncate = _ref.truncate,
      weight = _ref.weight,
      textAlign = _ref.textAlign,
      rest = _objectWithoutProperties(_ref, ['value', 'color', 'size', 'truncate', 'weight', 'textAlign']);

  return rest;
};

export { extractTextProps };
export var collectTextProps = function collectTextProps(_ref2) {
  var value = _ref2.value,
      color = _ref2.color,
      size = _ref2.size,
      truncate = _ref2.truncate,
      weight = _ref2.weight,
      textAlign = _ref2.textAlign;
  return {
    value: value, color: color, size: size, truncate: truncate, weight: weight, textAlign: textAlign
  };
};

export default (function (_ref3) {
  var value = _ref3.value,
      rest = _objectWithoutProperties(_ref3, ['value']);

  return React.createElement(
    Text,
    collectTextProps(rest),
    value
  );
});