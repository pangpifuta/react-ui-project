var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

import React from 'react';
import { Tags } from './Tags';

var TagsSelect = function TagsSelect(props) {
  var _ref = props || {},
      tagProps = _ref.tagProps,
      rest = _objectWithoutProperties(_ref, ['tagProps']);

  return function (_ref2) {
    var placeholder = _ref2.placeholder,
        value = _ref2.value,
        onChange = _ref2.onChange;
    return React.createElement(Tags, _extends({
      focusable: false,
      placeholder: placeholder,
      value: value,
      onChange: onChange,
      tagProps: _extends({}, tagProps, { onClick: function onClick(e) {
          e.stopPropagation();
        } })
    }, rest));
  };
};

export { TagsSelect };
export { Tags };