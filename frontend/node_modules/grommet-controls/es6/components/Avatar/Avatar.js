var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

import React from 'react';
import { compose } from 'recompose';
import { Box, Text } from 'grommet';
import { withTheme } from 'styled-components';
import { ImageStamp } from '../ImageStamp';

var Avatar = function Avatar(_ref) {
  var image = _ref.image,
      title = _ref.title,
      subTitle = _ref.subTitle,
      rest = _objectWithoutProperties(_ref, ['image', 'title', 'subTitle']);

  return React.createElement(
    Box,
    { direction: 'row', align: 'center', gap: 'small' },
    React.createElement(ImageStamp, _extends({
      src: image,
      round: 'full'
    }, rest)),
    React.createElement(
      Box,
      { justify: 'between' },
      React.createElement(
        Text,
        { weight: 'bold', truncate: true },
        title
      ),
      React.createElement(
        Text,
        { size: 'small', truncate: true },
        subTitle
      )
    )
  );
};

var AvatarDoc = void 0;
if (process.env.NODE_ENV !== 'production') {
  AvatarDoc = require('./doc').default(Avatar); // eslint-disable-line global-require
}

var AvatarWrapper = compose(withTheme)(AvatarDoc || Avatar);

export { AvatarWrapper as Avatar };