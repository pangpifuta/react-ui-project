var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

import React from 'react';
import { CheckBox, Box } from 'grommet';
import { withFormField } from '../withFormField';

var CheckBoxField = withFormField(function (_ref) {
  var value = _ref.value,
      _onChange = _ref.onChange,
      rest = _objectWithoutProperties(_ref, ['value', 'onChange']);

  return React.createElement(
    Box,
    { pad: { vertical: 'small' } },
    React.createElement(CheckBox, _extends({}, rest, { onChange: function onChange() {
        return _onChange({ target: { value: !value } });
      } }))
  );
});
export { CheckBoxField };