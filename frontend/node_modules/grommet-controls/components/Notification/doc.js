'use strict';

exports.__esModule = true;

var _reactDesc = require('react-desc');

var _propTypes = require('grommet/utils/prop-types');

exports.default = function (Element) {
  var DocumentedElement = (0, _reactDesc.describe)(Element).description('A Box to display notification messages.').usage('$ npm install grommet-controls\n \n    import { Notification } from \'grommet-controls\';\n\n    <Notification message={...} onClose={...} />');
  DocumentedElement.propTypes = {
    a11yTitle: _propTypes.a11yTitlePropType,
    status: _reactDesc.PropTypes.oneOf(['ok', 'info', 'warning', 'error', 'unknown', 'disabled']).description('Status color.'),
    size: _reactDesc.PropTypes.oneOf(['small', 'medium', 'large']).description('The font size of the notification message.'),

    state: _reactDesc.PropTypes.string.description('State label.'),
    strong: _reactDesc.PropTypes.bool.description('Heading bold state.'),
    message: _reactDesc.PropTypes.string.description('Message to be displayed.'),
    icon: _reactDesc.PropTypes.oneOfType([_reactDesc.PropTypes.bool, _reactDesc.PropTypes.element]).description('Notification icon.'),
    closer: _reactDesc.PropTypes.oneOfType([_reactDesc.PropTypes.bool, _reactDesc.PropTypes.element]).description('Closer icon.'),
    onClose: _reactDesc.PropTypes.func.description('Function that will be called when the user closes the notification.'),
    percentComplete: _reactDesc.PropTypes.number.description('Percent complete Meter for task notifications.'),
    timestamp: _reactDesc.PropTypes.object.description('timestamp for the notification (Date).'),
    locale: _reactDesc.PropTypes.string.description('The locale to use for timestamp, if provided.'),
    reverse: _reactDesc.PropTypes.bool.description('If true, reverse the order of the Notification elements.')
  };
  return DocumentedElement;
};