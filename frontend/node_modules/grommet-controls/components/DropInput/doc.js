'use strict';

exports.__esModule = true;

var _reactDesc = require('react-desc');

var _propTypes = require('grommet/utils/prop-types');

exports.default = function (Element) {
  var DocumentedElement = (0, _reactDesc.describe)(Element).description('An Input control with an optional drop button with the specified \'dropContent\' or widgets.').usage('\n    $ npm install grommet-controls\n\n    import { DropInput } from \'grommet-controls\';\n\n    <DropInput dropContent={...} />\n    ');

  DocumentedElement.propTypes = {
    a11yTitle: _propTypes.a11yTitlePropType,
    a11yDropTitle: _reactDesc.PropTypes.string.description('Custom drop button title to be used by screen readers..'),
    placeholder: _reactDesc.PropTypes.string.description('Placeholder text to use when no value is provided.'),
    value: _reactDesc.PropTypes.oneOfType([_reactDesc.PropTypes.string, _reactDesc.PropTypes.number]).description('Value for the field.'),
    id: _reactDesc.PropTypes.string.description('The id attribute of the input.'),
    name: _reactDesc.PropTypes.string.description('The name attribute of the input.'),
    disabled: _reactDesc.PropTypes.bool.description('Setting to true causes the input to be disabled.'),
    onChange: _reactDesc.PropTypes.func.description('Function that will be called when the user enters a new valuu.'),
    focusIndicator: _reactDesc.PropTypes.bool.description('Whether the plain text input should receive a focus outline.'),
    plain: _reactDesc.PropTypes.bool.description('Whether this is a plain input with no border or padding.\nOnly use this when the containing context provides sufficient affordance'),
    dropContent: _reactDesc.PropTypes.element.description('Content to put inside the Drop.'),
    dropIcon: _reactDesc.PropTypes.element.description('Icon for drop content.'),
    widgets: _reactDesc.PropTypes.arrayOf(_reactDesc.PropTypes.shape({
      icon: _reactDesc.PropTypes.element.isRequired
    })).description('Additional widgets to be placed next to the input.'),
    onClose: _reactDesc.PropTypes.func.description('Callback for when the drop is closed')
  };

  return DocumentedElement;
};