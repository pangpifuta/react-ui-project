'use strict';

exports.__esModule = true;

var _reactDesc = require('react-desc');

var _propTypes = require('grommet/utils/prop-types');

exports.default = function (Element) {
  var DocumentedElement = (0, _reactDesc.describe)(Element).description('A tag control with a label and icon.').usage('$ npm install grommet-controls\n\n    import { Tag } from \'grommet-controls\';\n\n    <Tag label={...} icon={...} />');

  DocumentedElement.propTypes = {
    a11yTitle: _propTypes.a11yTitlePropType,
    border: _reactDesc.PropTypes.oneOfType([_reactDesc.PropTypes.oneOf(['top', 'left', 'bottom', 'right', 'horizontal', 'vertical', 'all']), _reactDesc.PropTypes.shape({
      color: _reactDesc.PropTypes.string,
      side: _reactDesc.PropTypes.oneOf(['top', 'left', 'bottom', 'right', 'horizontal', 'vertical', 'all']),
      size: _reactDesc.PropTypes.oneOf(['small', 'medium', 'large'])
    })]).description('Include a border.'),
    background: _reactDesc.PropTypes.string.description('Fill color for the tag.'),
    disabled: _reactDesc.PropTypes.bool.description('Displays a disabled style for the tag'),
    focusable: _reactDesc.PropTypes.bool.description('Whether the tag is focusable'),
    icon: _reactDesc.PropTypes.element.description('Icon element to place in the tag.'),
    label: _reactDesc.PropTypes.node.description('Label text to place next to the control.'),
    onClick: _reactDesc.PropTypes.func.description('Function that will be called when the user clicks the background/label of the tag, or presses the Enter key.'),

    onChange: _reactDesc.PropTypes.func.description('Function that will be called when the user clicks the icon on the tag, or presses the Space key.'),
    reverse: _reactDesc.PropTypes.bool.description('Whether to show the label in front of the checkbox.'),
    round: _reactDesc.PropTypes.oneOf(['xsmall', 'small', 'medium', 'large', 'full']).description('How much to round the corners of the tag.'),
    size: _reactDesc.PropTypes.oneOf(['xsmall', 'small', 'medium', 'large', 'xlarge', 'xxlarge']).description('The font size of the label.')
  };

  return DocumentedElement;
};